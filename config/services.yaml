# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    mailer.global.sender: 'prenotazioni@8viadeilibrai.it'
    mailer.global.sender.as: 'Oberdan 8'

    booking.mailer.backoffice.retriever.address: 'info@oberdan8.it'
    booking.mailer.backoffice.retriever.name: 'Gestione prenotazioni'

    booking.adozioni_directory: '%kernel.project_dir%/public/uploads/reservation'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        # setup special, global autowiring rules
        bind:
            #$markdownLogger: '@monolog.logger.markdown'
            $isDebug: '%kernel.debug%'
            #$uploadsFilesystem: '@oneup_flysystem.uploads_filesystem_filesystem'
            #$uploadedAssetsBaseUrl: '%uploads_base_url%'
            string $publicDir: '%kernel.project_dir%/public'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']


    #
    #   BOOKING BOUNDED CONTEXT
    #

    Booking\Adapter\HttpDriver\:
        resource: '../core/booking/src/Adapter/HttpDriver/'
        tags: [ 'controller.service_arguments' ]

    Booking\Adapter\:
        resource: '../core/booking/src/Adapter/'
        exclude:
            - '../core/booking/src/Adapter/HttpDriver'

    Booking\Infrastructure\Framework\:
        resource: '../core/booking/src/Infrastructure/Framework/'
        exclude:
            - '../core/booking/src/Infrastructure/Framework/templates'
            - '../core/booking/src/Infrastructure/Framework/Form/Dto'

    Booking\Infrastructure\Framework\Form\Service\AdozioniUploader:
        arguments:
            - '%booking.adozioni_directory%'


    Booking\Infrastructure\BookingConfiguration:
        arguments:
            - '%mailer.global.sender%'
            - '%mailer.global.sender.as%'
            - '%booking.mailer.backoffice.retriever.address%'
            - '%booking.mailer.backoffice.retriever.name%'

    Booking\Infrastructure\BookingEmailSender:
        factory: [ '@Booking\Infrastructure\BookingConfiguration', 'emailSender' ]

    Booking\Infrastructure\BackofficeEmailRetriever:
        factory: [ '@Booking\Infrastructure\BookingConfiguration', 'backofficeEmailRetriever' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Booking\Application\Domain\Model\ReservationRepositoryInterface:
        class: Booking\Adapter\Persistance\ReservationRepository
