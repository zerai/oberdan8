name: Commit stage

on: [ push ]


env:
  GITHUB_PAT: ${{ secrets.OBERDAN8_GHA_PAT }}
  COVERAGE: '0'
  PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite, xsl
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v2

jobs:
  lint-composer:
    runs-on: ubuntu-18.04
    timeout-minutes: 5

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize:2.16.0

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

#      - name: Run composer validate
#        run: composer validate --strict --ansi

      - name: Run composer normalize
        run: composer-normalize --dry-run --ansi


  lint-yaml:
    runs-on: ubuntu-18.04
    timeout-minutes: 5

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Run yaml linter
        run: |
          ./bin/console lint:yaml config/
          ./bin/console lint:yaml src/
          ./bin/console lint:yaml core/booking/src/






  coding-standard:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install ecs tool
        run: composer bin ecs install --no-progress --ansi

      - name: Run easy-coding-standard
        run: vendor/bin/ecs check --ansi


  phpstan:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install phpstan tool
        run: composer bin phpstan install

      - name: Run phpstan
        run: ./vendor/bin/phpstan --configuration=phpstan.neon --memory-limit=-1


  psalm:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install psalm tool
        run: composer bin psalm install

      - name: Prepare symfony container
        run: bin/console debug:container

      - name: Run psalm
        run: ./vendor/bin/psalm --config psalm.xml --diff --show-info=false --stats --threads=4



  architecture-check:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install deptrac tool
        run: composer bin deptrac install

      - name: Run architecture check (Booking domain isolation)
        run: ./vendor/bin/deptrac analyse core/depfile-booking.yaml

      - name: Run architecture check (Bounded Context)
        run: ./vendor/bin/deptrac analyse core/depfile-booking.yaml


  booking-unit-test:
    needs: [lint-composer, coding-standard, phpstan, psalm, architecture-check]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Run unit test suite
        run: bin/phpunit --configuration core/booking/tests/Unit/phpunit.xml
        env:
          SYMFONY_DEPRECATIONS_HELPER: disabled


  symfony-test:
    needs: [booking-unit-test]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      mysql:
        image: mariadb:10.3.29
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    strategy:
      matrix:
        php:
          - '7.4'
        node:
          - '16.x'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"

      - name: Get Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-

      - name: Install JS dependencies
        run: yarn install

      - name: Build assets
        run: |
          bin/console assets:install public -vvv -e test
          yarn build

      - name: Fix .htaccess
        run: mv public/.htaccess public/.htaccess.dist

      - name: Run webserver
        run: symfony server:start --port=8080 --dir=public --daemon --no-tls

      - name: Run application container lint
        run: ./bin/console lint:container

      - name: Run twig template lint
        run: ./bin/console lint:twig templates --env=prod

      - name: Run Migration & test fixtures
        run: |
          #php bin/console doctrine:schema:update --force -e test || echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate -e test --no-interaction|| echo "No migrations found or migration failed"
          php bin/console doctrine:fixtures:load --group=test -e test --no-interaction
        env:
          DATABASE_URL: mysql://root:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony_test?serverVersion=mariadb-10.3.29

      - name: Run database schema mapping validation
        run: ./bin/console doctrine:schema:validate -e test
        env:
          DATABASE_URL: mysql://root:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony_test?serverVersion=mariadb-10.3.29
        continue-on-error: true

      - name: Run test suite
        run: |
          bin/phpunit tests/Unit
          bin/phpunit tests/Integration
          bin/phpunit tests/Functional
          bin/phpunit tests/E2E/Backoffice
          bin/phpunit tests/E2E/AdozioniReservation
          bin/phpunit tests/E2E/RegularReservation

        env:
          PANTHER_APP_ENV: test
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony_test?serverVersion=mariadb-10.3.29