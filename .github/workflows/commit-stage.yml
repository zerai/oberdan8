name: Commit stage

on: [ push ]


env:
  GITHUB_PAT: ${{ secrets.OBERDAN8_GHA_PAT }}
  COVERAGE: '0'
  PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite, xsl
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v2

jobs:
  lint-composer:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.*.message, 'composer(deps')"
    timeout-minutes: 5

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

  #      - name: Setup cache environment
  #        id: cache-php-extensions
  #        uses: shivammathur/cache-extensions@v1
  #        with:
  #          php-version: ${{ matrix.php }}
  #          extensions: ${{ env.PHP_EXTENSIONS }}
  #          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
  #
  #      - name: Cache extensions
  #        uses: actions/cache@v2
  #        with:
  #          path: ${{ steps.cache-php-extensions.outputs.dir }}
  #          key: ${{ steps.cache-php-extensions.outputs.key }}
  #          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

#      - name: Run composer validate
#        run: composer validate --strict --ansi

      - name: Run composer normalize
        run: composer-normalize --dry-run --ansi


  lint-yaml:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.*.message, 'composer(deps)')"
    timeout-minutes: 5

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

#      - name: Setup cache environment
#        id: cache-php-extensions
#        uses: shivammathur/cache-extensions@v1
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: ${{ env.PHP_EXTENSIONS }}
#          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
#
#      - name: Cache extensions
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.cache-php-extensions.outputs.dir }}
#          key: ${{ steps.cache-php-extensions.outputs.key }}
#          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Run yaml linter
        run: |
          ./bin/console lint:yaml config/
          ./bin/console lint:yaml src/
          ./bin/console lint:yaml core/booking/src/


  coding-standard:
    if: "!contains(github.event.*.message, 'composer(deps')"
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

#      - name: Setup cache environment
#        id: cache-php-extensions
#        uses: shivammathur/cache-extensions@v1
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: ${{ env.PHP_EXTENSIONS }}
#          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
#
#      - name: Cache extensions
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.cache-php-extensions.outputs.dir }}
#          key: ${{ steps.cache-php-extensions.outputs.key }}
#          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install ecs tool
        run: composer bin ecs install --no-progress --ansi

      - name: Run easy-coding-standard
        run: vendor/bin/ecs check --ansi


  phpstan:
    if: "!contains(github.event.*.message, 'composer(deps')"
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      #      - name: Setup cache environment
      #        id: cache-php-extensions
      #        uses: shivammathur/cache-extensions@v1
      #        with:
      #          php-version: ${{ matrix.php }}
      #          extensions: ${{ env.PHP_EXTENSIONS }}
      #          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
      #
      #      - name: Cache extensions
      #        uses: actions/cache@v2
      #        with:
      #          path: ${{ steps.cache-php-extensions.outputs.dir }}
      #          key: ${{ steps.cache-php-extensions.outputs.key }}
      #          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install phpstan tool
        run: composer bin phpstan install

      - name: Run phpstan
        run: ./vendor/bin/phpstan --configuration=phpstan.neon --memory-limit=-1


  psalm:
    if: "!contains(github.event.*.message, 'composer(deps')"
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      #      - name: Setup cache environment
      #        id: cache-php-extensions
      #        uses: shivammathur/cache-extensions@v1
      #        with:
      #          php-version: ${{ matrix.php }}
      #          extensions: ${{ env.PHP_EXTENSIONS }}
      #          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
      #
      #      - name: Cache extensions
      #        uses: actions/cache@v2
      #        with:
      #          path: ${{ steps.cache-php-extensions.outputs.dir }}
      #          key: ${{ steps.cache-php-extensions.outputs.key }}
      #          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install psalm tool
        run: composer bin psalm install

      - name: Run psalm
        run: ./vendor/bin/psalm --config psalm.xml --diff --show-info=false --stats --threads=4



  architecture-check:
    if: "!contains(github.event.*.message, 'composer(deps')"
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      #      - name: Setup cache environment
      #        id: cache-php-extensions
      #        uses: shivammathur/cache-extensions@v1
      #        with:
      #          php-version: ${{ matrix.php }}
      #          extensions: ${{ env.PHP_EXTENSIONS }}
      #          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
      #
      #      - name: Cache extensions
      #        uses: actions/cache@v2
      #        with:
      #          path: ${{ steps.cache-php-extensions.outputs.dir }}
      #          key: ${{ steps.cache-php-extensions.outputs.key }}
      #          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install application dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      - name: Install phpunit dependencies
        run: bin/phpunit install

      - name: Install psalm tool
        run: composer bin deptrac install

      - name: Run architecture check (Booking domain isolation)
        run: ./vendor/bin/deptrac analyse core/depfile-booking.yaml
